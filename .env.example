# 懂拍帝摄影平台 - 环境变量配置模板
# 复制此文件为 .env 并填入真实的配置信息
# 注意：.env 文件不会被提交到版本控制系统

# ============================================================================
# 应用基础配置
# ============================================================================
NODE_ENV=production
PORT=3000

# ============================================================================
# 数据库配置
# ============================================================================
# PostgreSQL数据库连接字符串
# 格式：postgresql://用户名:密码@主机:端口/数据库名
DATABASE_URL=postgresql://dongpaidi_user:YOUR_SECURE_DATABASE_PASSWORD@postgres:5432/dongpaidi_prod

# ============================================================================
# Redis缓存配置
# ============================================================================
REDIS_URL=redis://:YOUR_SECURE_REDIS_PASSWORD@redis:6379
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=YOUR_SECURE_REDIS_PASSWORD

# ============================================================================
# JWT认证配置
# ============================================================================
# JWT主密钥（至少32字符的随机字符串）
JWT_SECRET=YOUR_SUPER_SECURE_JWT_SECRET_AT_LEAST_32_CHARACTERS_LONG

# JWT刷新令牌密钥（至少32字符的随机字符串）
JWT_REFRESH_SECRET=YOUR_SUPER_SECURE_REFRESH_SECRET_AT_LEAST_32_CHARACTERS_LONG

# JWT令牌有效期
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# ============================================================================
# 加密配置
# ============================================================================
# 数据加密密钥（必须是32字符）
ENCRYPTION_KEY=YOUR_32_CHARACTER_ENCRYPTION_KEY

# ============================================================================
# 管理员配置
# ============================================================================
ADMIN_EMAIL=admin@yourdomain.com
ADMIN_PASSWORD=YOUR_SECURE_ADMIN_PASSWORD

# ============================================================================
# 文件上传配置
# ============================================================================
UPLOAD_MAX_SIZE=10485760
UPLOAD_PATH=/app/uploads

# ============================================================================
# API配置
# ============================================================================
API_PREFIX=/api/v1
# CORS源配置（生产环境请设置具体域名）
CORS_ORIGIN=https://yourdomain.com

# ============================================================================
# 安全配置
# ============================================================================
SECURITY_ENABLED=true
THREAT_DETECTION_ENABLED=true

# ============================================================================
# 日志配置
# ============================================================================
LOG_LEVEL=info
LOG_FILE_PATH=/app/logs

# ============================================================================
# 可选配置 - 第三方服务
# ============================================================================

# 微信小程序配置
# WECHAT_APP_ID=your_wechat_app_id
# WECHAT_APP_SECRET=your_wechat_app_secret

# 短信服务配置
# SMS_ACCESS_KEY_ID=your_sms_access_key_id
# SMS_ACCESS_KEY_SECRET=your_sms_access_key_secret
# SMS_SIGN_NAME=懂拍帝
# SMS_TEMPLATE_CODE=your_sms_template_code

# Supabase配置（如果使用）
# SUPABASE_URL=your_supabase_url
# SUPABASE_ANON_KEY=your_supabase_anon_key

# 监控服务配置
# SENTRY_DSN=your_sentry_dsn
# NEW_RELIC_LICENSE_KEY=your_new_relic_key

# SSL证书配置
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem

# ============================================================================
# Docker Compose 专用配置
# ============================================================================
# PostgreSQL配置（用于Docker Compose）
POSTGRES_DB=dongpaidi_prod
POSTGRES_USER=dongpaidi_user
POSTGRES_PASSWORD=YOUR_SECURE_DATABASE_PASSWORD

# ============================================================================
# 密钥生成说明
# ============================================================================
# 您可以使用以下命令生成安全的密钥：
# 
# 生成JWT密钥：
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# 
# 生成32字符加密密钥：
# node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
# 
# 或者使用后端提供的密钥生成工具：
# cd dongpaidi-backend && npm run generate-keys
